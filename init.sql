CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;
CREATE TABLE categories (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    name character varying(255) NOT NULL,
    description text NOT NULL,
    CONSTRAINT "PK_categories" PRIMARY KEY (id)
);

CREATE TABLE institutions (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    name character varying(255) NOT NULL,
    image text NOT NULL,
    link text,
    CONSTRAINT "PK_institutions" PRIMARY KEY (id)
);

CREATE TABLE localities (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    country character varying(255) NOT NULL,
    state text NOT NULL,
    city text NOT NULL,
    CONSTRAINT "PK_localities" PRIMARY KEY (id)
);

CREATE TABLE sectors (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    name character varying(20) NOT NULL,
    description text,
    CONSTRAINT "PK_sectors" PRIMARY KEY (id)
);

CREATE TABLE services_types (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    name character varying(150) NOT NULL,
    description text,
    CONSTRAINT "PK_services_types" PRIMARY KEY (id)
);

CREATE TABLE users (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    fullname character varying(60) NOT NULL,
    email character varying(255) NOT NULL,
    password_hash text NOT NULL,
    phone text,
    rol text NOT NULL,
    registration_date timestamp with time zone NOT NULL,
    birthdate timestamp with time zone NOT NULL,
    is_active boolean NOT NULL,
    CONSTRAINT "PK_users" PRIMARY KEY (id)
);

CREATE TABLE opportunity_types (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    name character varying(100) NOT NULL,
    description character varying(255),
    categories_id integer NOT NULL,
    CONSTRAINT "PK_opportunity_types" PRIMARY KEY (id),
    CONSTRAINT "FK_opportunity_types_categories_categories_id" FOREIGN KEY (categories_id) REFERENCES categories (id) ON DELETE RESTRICT
);

CREATE TABLE services (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    is_active boolean NOT NULL,
    service_type_id integer NOT NULL,
    title text NOT NULL,
    description text NOT NULL,
    image text NOT NULL,
    CONSTRAINT "PK_services" PRIMARY KEY (id),
    CONSTRAINT "FK_services_services_types_service_type_id" FOREIGN KEY (service_type_id) REFERENCES services_types (id) ON DELETE RESTRICT
);

CREATE TABLE auth_users (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    user_id integer NOT NULL,
    password_hash text NOT NULL,
    CONSTRAINT "PK_auth_users" PRIMARY KEY (id),
    CONSTRAINT "FK_auth_users_users_user_id" FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE profiles (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    preferences text,
    biography text,
    profile_image text,
    user_id integer NOT NULL,
    CONSTRAINT "PK_profiles" PRIMARY KEY (id),
    CONSTRAINT "FK_profiles_users_user_id" FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE opportunities (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    title character varying(255) NOT NULL,
    description text NOT NULL,
    opportunity_type_id integer NOT NULL,
    sector_id integer NOT NULL,
    locality_id integer NOT NULL,
    requirements text,
    benefits text,
    modality text NOT NULL,
    publication_date timestamp with time zone NOT NULL,
    expiration_date timestamp with time zone NOT NULL,
    institution_id integer NOT NULL,
    status text NOT NULL,
    rating_id integer NOT NULL,
    average_score double precision,
    CONSTRAINT "PK_opportunities" PRIMARY KEY (id),
    CONSTRAINT "FK_opportunities_institutions_institution_id" FOREIGN KEY (institution_id) REFERENCES institutions (id) ON DELETE CASCADE,
    CONSTRAINT "FK_opportunities_localities_locality_id" FOREIGN KEY (locality_id) REFERENCES localities (id) ON DELETE RESTRICT,
    CONSTRAINT "FK_opportunities_opportunity_types_opportunity_type_id" FOREIGN KEY (opportunity_type_id) REFERENCES opportunity_types (id) ON DELETE CASCADE,
    CONSTRAINT "FK_opportunities_sectors_sector_id" FOREIGN KEY (sector_id) REFERENCES sectors (id) ON DELETE RESTRICT
);

CREATE TABLE favorites (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    user_id integer NOT NULL,
    opportunity_id integer NOT NULL,
    CONSTRAINT "PK_favorites" PRIMARY KEY (id),
    CONSTRAINT "FK_favorites_opportunities_opportunity_id" FOREIGN KEY (opportunity_id) REFERENCES opportunities (id) ON DELETE CASCADE,
    CONSTRAINT "FK_favorites_users_user_id" FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE rating (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    user_id integer,
    opportunity_id integer NOT NULL,
    score double precision NOT NULL,
    comment text,
    created_at timestamp with time zone NOT NULL,
    CONSTRAINT "PK_rating" PRIMARY KEY (id),
    CONSTRAINT "FK_rating_opportunities_opportunity_id" FOREIGN KEY (opportunity_id) REFERENCES opportunities (id) ON DELETE CASCADE,
    CONSTRAINT "FK_rating_users_user_id" FOREIGN KEY (user_id) REFERENCES users (id)
);

CREATE TABLE requests (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    user_id integer NOT NULL,
    opportunity_id integer NOT NULL,
    state text NOT NULL,
    request_date timestamp with time zone NOT NULL,
    CONSTRAINT "PK_requests" PRIMARY KEY (id),
    CONSTRAINT "FK_requests_opportunities_opportunity_id" FOREIGN KEY (opportunity_id) REFERENCES opportunities (id) ON DELETE CASCADE,
    CONSTRAINT "FK_requests_users_user_id" FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE UNIQUE INDEX "IX_auth_users_user_id" ON auth_users (user_id);

CREATE INDEX "IX_favorites_opportunity_id" ON favorites (opportunity_id);

CREATE INDEX "IX_favorites_user_id" ON favorites (user_id);

CREATE INDEX "IX_opportunities_institution_id" ON opportunities (institution_id);

CREATE INDEX "IX_opportunities_locality_id" ON opportunities (locality_id);

CREATE INDEX "IX_opportunities_opportunity_type_id" ON opportunities (opportunity_type_id);

CREATE INDEX "IX_opportunities_sector_id" ON opportunities (sector_id);

CREATE UNIQUE INDEX "IX_opportunities_title" ON opportunities (title);

CREATE INDEX "IX_opportunity_types_categories_id" ON opportunity_types (categories_id);

CREATE UNIQUE INDEX "IX_profiles_user_id" ON profiles (user_id);

CREATE INDEX "IX_rating_opportunity_id" ON rating (opportunity_id);

CREATE INDEX "IX_rating_user_id" ON rating (user_id);

CREATE INDEX "IX_requests_opportunity_id" ON requests (opportunity_id);

CREATE INDEX "IX_requests_user_id" ON requests (user_id);

CREATE INDEX "IX_services_service_type_id" ON services (service_type_id);

CREATE UNIQUE INDEX "IX_users_email" ON users (email);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250701051212_InitialCreate', '9.0.3');

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250701052217_InitialSchema', '9.0.3');

COMMIT;

